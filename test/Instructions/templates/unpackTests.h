#ifndef _UNPACK_TESTS_H
#define _UNPACK_TESTS_H

#ifdef UNPACK_TESTS
#ifdef FIRST_INSTRUCTION_TEST
#ifdef SECOND_INSTRUCTION_TEST
#ifdef THIRD_INSTRUCTION_TEST

#ifdef INSTRUCTION_IM
#define FIRST_TEST_IM FIRST_INSTRUCTION_TEST("IM")
#define SECOND_TEST_IM SECOND_INSTRUCTION_TEST("IM")
#define THIRD_TEST_IM THIRD_INSTRUCTION_TEST("IM")
#endif

#ifdef INSTRUCTION_ZP
#define FIRST_TEST_ZP FIRST_INSTRUCTION_TEST("ZP")
#define SECOND_TEST_ZP SECOND_INSTRUCTION_TEST("ZP")
#define THIRD_TEST_ZP THIRD_INSTRUCTION_TEST("ZP")
#endif

#ifdef INSTRUCTION_ZPX
#define FIRST_TEST_ZPX FIRST_INSTRUCTION_TEST("ZP,X")
#define SECOND_TEST_ZPX SECOND_INSTRUCTION_TEST("ZP,X")
#define THIRD_TEST_ZPX THIRD_INSTRUCTION_TEST("ZP,X")

#define FIRST_TEST_ZPXW FIRST_INSTRUCTION_TEST("ZP,X with wrapping")
#define SECOND_TEST_ZPXW SECOND_INSTRUCTION_TEST("ZP,X with wrapping")
#define THIRD_TEST_ZPXW THIRD_INSTRUCTION_TEST("ZP,X with wrapping")
#endif

#ifdef INSTRUCTION_ZPY
#define FIRST_TEST_ZPY FIRST_INSTRUCTION_TEST("ZP,Y")
#define SECOND_TEST_ZPY SECOND_INSTRUCTION_TEST("ZP,Y")
#define THIRD_TEST_ZPY THIRD_INSTRUCTION_TEST("ZP,Y")

#define FIRST_TEST_ZPYW FIRST_INSTRUCTION_TEST("ZP,Y with wrapping")
#define SECOND_TEST_ZPYW SECOND_INSTRUCTION_TEST("ZP,Y with wrapping")
#define THIRD_TEST_ZPYW THIRD_INSTRUCTION_TEST("ZP,Y with wrapping")
#endif

#ifdef INSTRUCTION_ABS
#define FIRST_TEST_ABS FIRST_INSTRUCTION_TEST("ABS")
#define SECOND_TEST_ABS SECOND_INSTRUCTION_TEST("ABS")
#define THIRD_TEST_ABS THIRD_INSTRUCTION_TEST("ABS")
#endif

#ifdef INSTRUCTION_ABSX
#define FIRST_TEST_ABSX FIRST_INSTRUCTION_TEST("ABS,X")
#define SECOND_TEST_ABSX SECOND_INSTRUCTION_TEST("ABS,X")
#define THIRD_TEST_ABSX THIRD_INSTRUCTION_TEST("ABS,X")
#endif

#ifdef INSTRUCTION_ABSY
#define FIRST_TEST_ABSY FIRST_INSTRUCTION_TEST("ABS,Y")
#define SECOND_TEST_ABSY SECOND_INSTRUCTION_TEST("ABS,Y")
#define THIRD_TEST_ABSY THIRD_INSTRUCTION_TEST("ABS,Y")
#endif

#ifdef INSTRUCTION_INDX
#define FIRST_TEST_INDX FIRST_INSTRUCTION_TEST("IND,X")
#define SECOND_TEST_INDX SECOND_INSTRUCTION_TEST("IND,X")
#define THIRD_TEST_INDX THIRD_INSTRUCTION_TEST("IND,X")

#define FIRST_TEST_INDXW FIRST_INSTRUCTION_TEST("IND,X with wrapping")
#define SECOND_TEST_INDXW SECOND_INSTRUCTION_TEST("IND,X with wrapping")
#define THIRD_TEST_INDXW THIRD_INSTRUCTION_TEST("IND,X with wrapping")
#endif

#ifdef INSTRUCTION_INDY
#define FIRST_TEST_INDY FIRST_INSTRUCTION_TEST("IND,Y")
#define SECOND_TEST_INDY SECOND_INSTRUCTION_TEST("IND,Y")
#define THIRD_TEST_INDY THIRD_INSTRUCTION_TEST("IND,Y")
#endif

#ifdef INSTRUCTION_A
#define FIRST_TEST_A FIRST_INSTRUCTION_TEST("Accumulator addressing")
#define SECOND_TEST_A SECOND_INSTRUCTION_TEST("Accumulator addressing")
#define THIRD_TEST_A THIRD_INSTRUCTION_TEST("Accumulator addressing")
#endif

#endif
#endif
#endif
#endif

#endif  // _UNPACK_TESTS_H